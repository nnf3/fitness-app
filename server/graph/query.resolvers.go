package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"app/graph/model"
	"app/graph/services"
	"context"
	"fmt"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	userService := services.NewUserServiceWithSeparation(r.DB, r.DataLoaders.UserLoader)
	currentUser, err := userService.GetCurrentUser(ctx)
	if err != nil {
		return nil, err
	}
	if !currentUser.IsAdmin() {
		return nil, fmt.Errorf("unauthorized")
	}

	return userService.GetUsers(ctx)
}

// CurrentUser is the resolver for the currentUser field.
func (r *queryResolver) CurrentUser(ctx context.Context) (*model.User, error) {
	userService := services.NewUserServiceWithSeparation(r.DB, r.DataLoaders.UserLoader)
	return userService.GetOrCreateUserByUID(ctx)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
