package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"app/entity"
	"app/graph/model"
	"app/graph/services"
	"context"
)

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, input model.DeleteUser) (bool, error) {
	id := input.ID
	user := entity.User{}

	if err := r.DB.First(&user, id).Error; err != nil {
		return false, err
	}

	if err := r.DB.Delete(&user).Error; err != nil {
		return false, err
	}

	return true, nil
}

// CreateProfile is the resolver for the createProfile field.
func (r *mutationResolver) CreateProfile(ctx context.Context, input model.CreateProfile) (*model.Profile, error) {
	profileService := services.NewProfileService(r.DB)
	return profileService.CreateProfile(ctx, input)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
