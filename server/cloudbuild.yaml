substitutions:
  _PROJECT_ID: $PROJECT_ID
  _REGION: asia-northeast1
  _REPO_API: fitness-api
  _REPO_MIGRATE: fitness-api-migrate
  _JOB_NAME: fitness-api-migrate

steps:
  # 1. migrate用 Dockerイメージをビルド
  - name: 'gcr.io/cloud-builders/docker'
    id: build-migrate
    args: [
      'build', '-f', 'Dockerfile.migrate',
      '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_MIGRATE/fitness-api-migrate:$latest',
      '.'
    ]

  # push
  - name: 'gcr.io/cloud-builders/docker'
    id: push-migrate
    args: [
      'push', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_MIGRATE/fitness-api-migrate:$latest'
    ]

  # Cloud Run Job を update
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: update-migrate-job
    entrypoint: bash
    args:
      - -c
      - >
        gcloud run jobs update $_JOB_NAME \
          --image=$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_MIGRATE/fitness-api-migrate:$latest \
          --region=$_REGION \
          --quiet

  # 4. Cloud Run Job を実行
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: run-migrate-job
    entrypoint: gcloud
    args:
      - run
      - jobs
      - execute
      - $_JOB_NAME
      - --region=$_REGION
      - --wait

  # 5. アプリケーションの Docker イメージをビルド
  - name: 'gcr.io/cloud-builders/docker'
    id: build-api
    args: [
      'build', '-t',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_API/fitness-api:$latest',
      '.'
    ]

  # push
  - name: 'gcr.io/cloud-builders/docker'
    id: push-api
    args: [
      'push', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_API/fitness-api:$latest'
    ]

  # 7. Cloud Run サービスにデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: deploy-api
    entrypoint: gcloud
    args:
      - run
      - deploy
      - fitness-api
      - --region=$_REGION
      - --image=$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_API/fitness-api:$latest
      - --quiet

options:
  logging: CLOUD_LOGGING_ONLY
